  openapi_generation:
    name: Generate OpenAPI Documentation
    runs-on: ubuntu-latest
    needs: security_check  # Этот шаг зависит от завершения предыдущего шага

    steps:
      - name: Check out the code
        uses: actions/checkout@v4  # Проверяем код

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'  # Указываем нужную версию Python

      - name: Install Dependencies
        run: |
          pip install flask flasgger  # Устанавливаем Flask и Flasgger для работы с OpenAPI

      - name: Run Flask application in background
        run: |
          export FLASK_APP=app.py  # Указываем правильный файл Flask-приложения
          flask run --host=0.0.0.0 --port=5000 --debug &  # Запускаем сервер в фоне с флагом debug

      - name: Wait for Flask to start
        run: sleep 20  # Увеличиваем время ожидания до 20 секунд

      - name: Generate OpenAPI Specification (openapi.yaml)
        run: |
          curl http://localhost:5000/swagger.json -o openapi.yaml  # Получаем OpenAPI спецификацию

      - name: Upload OpenAPI Spec as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: openapi-spec  # Загрузка OpenAPI спецификации как артефакт
          path: openapi.yaml  # Путь к сгенерированному файлу openapi.yaml



