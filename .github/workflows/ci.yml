name: CI Workflows

on:
  push:
    branches:
      - main

jobs:
  security_check:
    name: Security Check with Bandit
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Bandit
        run: |
          pip install bandit

      - name: Run Bandit Security Scan
        run: |
          bandit -r ./ -x tests --output bandit_report.html
          
      - name: Upload Bandit Report as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: bandit-report
          path: bandit_report.html

  openapi_generation:
    name: Generate OpenAPI Documentation
    runs-on: ubuntu-latest
    needs: security_check

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          pip install flask flasgger

      - name: Generate OpenAPI Specification (openapi.yaml)
        run: |
          python -c "
import sys
from flasgger import Swagger
from app import app

swagger = Swagger(app)
with open('openapi.yaml', 'w') as f:
    f.write(swagger.spec.to_yaml())
"
        env:
          FLASK_APP: app.py  # Убедитесь, что указываете правильный файл Flask-приложения

      - name: Upload OpenAPI Spec as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: openapi-spec
          path: openapi.yaml

  redoc_generation:
    name: Generate ReDoc Page
    runs-on: ubuntu-latest
    needs: openapi_generation

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install redocly
        run: |
          npm install -g @redocly/openapi-cli

      - name: Generate ReDoc HTML
        run: |
          redocly build-docs openapi.yaml --output docs/index.html

  deploy_to_pages:
    name: Deploy Documentation to GitHub Pages
    runs-on: ubuntu-latest
    needs: redoc_generation

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Install GitHub Pages Action
        uses: peaceiris/actions-gh-pages@v3

      - name: Deploy to GitHub Pages
        run: |
          mv docs/index.html ./docs/
          git add -A
          git commit -m "Deploy ReDoc Documentation"
          git push --force
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}









