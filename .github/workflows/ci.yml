name: CI Workflow

on:
  push:
    branches:
      - main

jobs:
  security_check:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Bandit
        run: pip install bandit

      - name: Run Bandit Security Scan
        run: bandit -r ./ -x tests --output bandit_report.html

      - name: Upload Bandit Report as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: bandit-report
          path: bandit_report.html

  openapi_generation:
    runs-on: ubuntu-latest
    needs: security_check
    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: pip install flask flasgger

      - name: Generate OpenAPI Specification
        run: |
          echo "
import sys
from flasgger import Swagger
from app import app
swagger = Swagger(app)
with open('openapi.yaml', 'w') as f:
    f.write(swagger.spec.to_yaml())
" > generate_openapi.py
          python generate_openapi.py

      - name: Check if openapi.yaml exists
        run: test -f openapi.yaml && echo "File exists" || echo "File missing"

      - name: Upload OpenAPI Spec as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: openapi-spec
          path: openapi.yaml

  redoc_generation:
    runs-on: ubuntu-latest
    needs: openapi_generation
    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install redocly
        run: npm install -g @redocly/openapi-cli

      - name: Generate ReDoc HTML
        run: redocly build-docs openapi.yaml --output docs/index.html

  deploy_to_pages:
    runs-on: ubuntu-latest
    needs: redoc_generation
    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs



