name: Deploy API Documentation

on:
  push:
    branches:
      - main  # Workflow запускается при push в main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Шаг 1: Checkout репозитория
      - name: Checkout repository
        uses: actions/checkout@v4

      # Шаг 2: Установка Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Шаг 3: Установка зависимостей
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flask
          pip install flasgger  # Устанавливаем flasgger для генерации OpenAPI спецификации

      # Шаг 4: Генерация OpenAPI спецификации
      - name: Generate OpenAPI specification
        run: |
          # Запуск Flask-приложения в фоновом режиме
          nohup python app.py &
          sleep 5  # Даем серверу время на старт

          # Извлекаем swagger.json
          curl http://127.0.0.1:5000/apidocs/swagger.json -o openapi.json
          
          # Переименовываем в openapi.yaml
          mv openapi.json openapi.yaml

      # Шаг 5: Установка redocly CLI
      - name: Install redocly CLI
        run: npm install -g @redocly/redoc-cli

      # Шаг 6: Генерация документации с помощью Redocly
      - name: Generate ReDoc documentation
        run: |
          redocly build-docs openapi.yaml --output ./docs  # Генерация документации в ./docs

      # Шаг 7: Публикация документации на GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs  # Публикуем сгенерированную документацию на GitHub Pages


